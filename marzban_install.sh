#!/bin/bash

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
set -e

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
color_echo() {
    local color="$1"
    local text="$2"
    if command -v tput &>/dev/null; then
        echo -e "$(tput setaf $color)$text$(tput sgr0)"
    else
        echo -e "$text"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_if_missing() {
    if ! dpkg -l | grep -q "^ii  $1 "; then
        apt install -y -q "$1"
    fi
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
ENV_FILE="/opt/marzban/.env"
XRAY_CONFIG_JSON=/opt/marzban/xray_config.json

update_env() {
  local key="$1"
    local new_value="$2"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª .env
    if [[ ! -f "$ENV_FILE" ]]; then
      echo "–û—à–∏–±–∫–∞: —Ñ–∞–π–ª $ENV_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω."
      return 1
    fi

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ –∑–Ω–∞—á–µ–Ω–∏–∏
    new_value=$(echo "$new_value" | sed 's/[&/\]/\\&/g')

    # –ó–∞–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∏–≥–Ω–æ—Ä–∏—Ä—É—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    sed -i "s#^\($key=\)[^#]*#\1$new_value#" "$ENV_FILE"

    echo "–ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è $key –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ $new_value –≤ —Ñ–∞–π–ª–µ $ENV_FILE"
}

apt update -y -q
install_if_missing curl
install_if_missing unzip
install_if_missing git
install_if_missing python3
install_if_missing python3-pip
install_if_missing postgresql
install_if_missing postgresql-contrib
install_if_missing nginx
install_if_missing snapd
install_if_missing jq

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
if ! command -v certbot &> /dev/null; then
    snap install core; snap refresh core
    snap install --classic certbot
    ln -s /snap/bin/certbot /usr/bin/certbot
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Xray, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
if ! command -v xray &> /dev/null; then
    color_echo 2 "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Xray..."
    bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install
fi

# –î–æ–±–∞–≤–ª—è–µ–º API Xray, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
CONFIG_FILE="/usr/local/etc/xray/config.json"
if ! grep -q '"api"' $CONFIG_FILE; then
    jq '.api |= if . then . + {services: ["HandlerService", "StatsService"], tag: "api"} else {services: ["HandlerService", "StatsService"], tag: "api"} end' $CONFIG_FILE > temp.json && mv temp.json $CONFIG_FILE
    jq '.inbounds |= . + [{"port": 10085, "listen": "127.0.0.1", "protocol": "dokodemo-door", "settings": {"address": "127.0.0.1"}, "tag": "api"}]' $CONFIG_FILE > temp.json && mv temp.json $CONFIG_FILE
    systemctl restart xray
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL
sudo -u postgres psql -tc "SELECT 1 FROM pg_roles WHERE rolname='marzban'" | grep -q 1 || sudo -u postgres psql -c "CREATE USER marzban WITH PASSWORD 'marzban';"
sudo -u postgres psql -tc "SELECT 1 FROM pg_database WHERE datname='marzban'" | grep -q 1 || sudo -u postgres psql -c "CREATE DATABASE marzban OWNER marzban;"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Marzban, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
ENV_FILE="/opt/marzban/.env"
if [ ! -d "/opt/marzban" ]; then
    color_echo 2 "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Marzban..."
    cd /opt && git clone https://github.com/Gozargah/Marzban.git marzban
    cd marzban && pip3 install -r requirements.txt

    cp /opt/marzban/.env.example ${ENV_FILE}
    update_env "SQLALCHEMY_DATABASE_URL" "postgresql://marzban:marzban@localhost/marzban"
    alembic upgrade head

    # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    color_echo 2 "üîë –°–æ–∑–¥–∞—ë–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    /opt/marzban/marzban-cli.py admin create --sudo
fi

# –°–æ–∑–¥–∞—ë–º —Å–µ—Ä–≤–∏—Å Marzban, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f "/etc/systemd/system/marzban.service" ]; then
    cat > /etc/systemd/system/marzban.service <<EOF
[Unit]
Description=Marzban Panel
After=network.target

[Service]
User=root
WorkingDirectory=/opt/marzban
ExecStart=/usr/bin/python3 /opt/marzban/main.py
Restart=always

[Install]
WantedBy=multi-user.target
EOF
    systemctl daemon-reload
    systemctl enable --now marzban
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx
if [ ! -f "/etc/nginx/sites-available/marzban" ]; then
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    color_echo 2 "üåê –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞:"
    read DOMAIN

    cat > /etc/nginx/sites-available/marzban <<EOF
server {
    listen 80;
    server_name $DOMAIN;

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF
    ln -s /etc/nginx/sites-available/marzban /etc/nginx/sites-enabled/marzban

    # –í—ã–ø—É—Å–∫–∞–µ–º SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if [ ! -d "/etc/letsencrypt/live/$DOMAIN" ]; then
        certbot --nginx -d $DOMAIN --non-interactive --agree-tos -m admin@$DOMAIN
    fi
fi

XRAY_PRIVATE_KEY=$(xray x25519 | grep -oP 'Private key: \K.*')
SHORT_ID=$(openssl rand -hex 8)

update_env "XRAY_PRIVATE_KEY" "$XRAY_PRIVATE_KEY"
update_env "SHORT_ID" "$SHORT_ID"

VLESS_REALITY_CONFIG='{
  "tag": "VLESS TCP REALITY",
  "listen": "0.0.0.0",
  "port": 2040,
  "protocol": "vless",
  "settings": {
    "clients": [],
    "decryption": "none"
  },
  "streamSettings": {
    "network": "tcp",
    "tcpSettings": {},
    "security": "reality",
    "realitySettings": {
      "show": false,
      "dest": "tradingview.com:443",
      "xver": 0,
      "serverNames": ["tradingview.com"],
      "privateKey": "'$XRAY_PRIVATE_KEY'",
      "shortIds": ["", "'$SHORT_ID'"]
    }
  },
  "sniffing": {
    "enabled": true,
    "destOverride": ["http", "tls", "quic"]
  }
}'

# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
color_echo 0 "---------------------------------------------------------------"
color_echo 0 "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ"
color_echo 0 "---------------------------------------------------------------"
color_echo 2 "üîó https://marzban-docs.sm1ky.com/"
color_echo 4 "üîó –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: https://$DOMAIN/dashboard"

# –î–æ–±–∞–≤–∏–º –∫–æ–Ω—Ñ–∏–≥–∏ –¥–ª—è VLESS
jq --argjson vless "$VLESS_REALITY_CONFIG" '.inbounds[0] = $vless' "$XRAY_CONFIG_JSON" > temp.json && mv temp.json "$XRAY_CONFIG_JSON"
color_echo 2 "–î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Vless REALITY"

rm marzban_install.sh
